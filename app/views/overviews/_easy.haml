- pages = local_assigns.fetch(:pages)
- edit_page = local_assigns.fetch(:page)
- content_parts = local_assigns.fetch(:content_parts)
- edit_content_part = local_assigns.fetch(:content_part)

- # Pages
- unless Page.current_editing_one

  - # select Page
  .pure-u-1.messages
    %h1 Welche Seite willst du bearbeiten?
    .pure-u-1.pure-u-md-1-3
      .pages
        %table
          %thead
            %tr
              %th.cell ID
              %th.cell Title
              %th.cell Pfad
              %th.cell
              %th.cell

          %tbody
            - pages.each do |page|
              - filtered_page = if page.edit_filter == 1 then "filtered-element" else "" end
              %tr{ class: filtered_page}
                %td.cell= page.id
                %td.cell= page.title
                %td.cell= link_to page.url, page.url
                %td.cell= link_to 'Wählen', "/overviews?page_id=#{page.id}#cms", 'class': 'pure-button'
                %td.cell
                  = form_for page do |f|
                    = f.submit 'Clonen', 'class': 'pure-button copy-page-button', formaction: copy_page_path(f.object.path)
                %td.cell= link_to 'Löschen', page, method: :delete, data: { :confirm => 'Bist du sicher?' }, 'class': 'pure-button'
        %br
        = link_to 'Neue Seite', new_page_path, 'class': 'pure-button new-page-button'
- else

  - # edit selected Page
  .pure-u-1.pure-u-md-1-3
    .pages
      %br
      %h1 Seite:
      %table
        %tbody
          - filtered_page = if edit_page.edit_filter == 1 then "filtered-element" else "" end
          %tr{ class: filtered_page}
            %td.cell= edit_page.title
            %td.cell= link_to edit_page.url, edit_page.url
            %td.cell= link_to 'andere Seite', "/overviews?page_id=nil#cms", 'class': 'pure-button'
    %br
    = form_for edit_page do |f|
      - if edit_page.errors.any?
        #error_explanation
          %h2= "#{pluralize(edit_page.errors.count, "error")} Es wurde das Speichern verhindert."
          %ul
            - edit_page.errors.full_messages.each do |msg|
              %li= msg

      .field
        = f.label :title
        = f.text_field :title, class: "page_title"
      .field
        = f.label :path
        = f.text_field :path, class: "page_path"
      .field
        = f.label :template_element
        = TemplateElement.render_dropdown("page", "template_element_id", f.object.template_element&.title)
      .actions
        = f.submit 'Speichern', 'class': 'pure-button save-page-button'
        - unless f.object.path.nil?
          = f.submit 'Seite clonen', 'class': 'pure-button copy-page-button', formaction: copy_page_path(f.object.path)
          = link_to 'Löschen', page, method: :delete, data: { :confirm => 'Bist du sicher?' }, 'class': 'pure-button'

  - # Content Parts
  .pure-u-1.pure-u-md-2-3
    - if edit_content_part&.edit_filter == 1
      %h1 Inhalt:
      .pure-g
        = render 'content_part_form'
    - else
      %h1 Welchen Inhalt willst du bearbeiten?
      .pure-g
        - content_positions = if edit_page.template_element then edit_page.template_element.positions(:agent) else [] end
        - rendered_content_positions = []
        = render partial: 'content_part_index', locals: { content_positions: content_positions,
                                                          rendered_content_positions: rendered_content_positions,
                                                          content_parts: content_parts }
